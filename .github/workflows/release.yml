name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9
      with:
          versionSpec: '5.1.x'
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9
    - run: |
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.NuGetVersionV2 }}"
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
    - name: Install dependencies
      run: dotnet restore
    - name: Build with dotnet
      run: dotnet build --configuration Release --no-restore
    - name: Test with dotnet
      run: dotnet test --no-restore
    - name: Pack with dotnet
      run: dotnet pack -c Release -p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }} --no-restore -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --output nuget-packages
    - name: Push with dotnet
      run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json
    - name: Archive packages
      uses: actions/upload-artifact@v2.1.4
      with:
        name: packages
        path: nuget-packages/*.nupkg
    - name: Archive symbols
      uses: actions/upload-artifact@v2.1.4
      with:
        name: symbols
        path: nuget-packages/*.snupkg
    - uses: "marvinpinto/action-automatic-releases@v1.1.0"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        title: v${{ steps.gitversion.outputs.NuGetVersionV2 }}
        files: |
          LICENSE
          nuget-packages/*.nupkg
          nuget-packages/*.snupkg
